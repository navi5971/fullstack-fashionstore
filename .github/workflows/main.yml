name: CI/CD for Fashion Store

on:
  push:
    branches:
      - master           # Trigger workflow on push to the main branch
      - products       # Trigger workflow for the products branch
      - aboutus        # Trigger workflow for the aboutus branch
      - adminhomefront # Trigger workflow for the adminhomefront branch
      - login          # Trigger workflow for the login branch
      - wishlist       # Trigger workflow for the wishlist branch
      - payment        # Trigger workflow for the payment branch
      - tailors        # Trigger workflow for the tailors branch
      - blog           # Trigger workflow for the blog branch
  pull_request:
    branches:
      - master           # Trigger workflow on pull requests targeting the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js for backend
      - name: Set up Node.js (Backend)
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install backend dependencies
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

        # Step 4: Run tests (products branch-specific and master)
      - name: Run Integration Tests for Products
        if: github.ref_name == 'products' || github.ref_name == 'master'
        working-directory: ./backend
        run: npx npm test -- test/products.back.test/integration --runInBand

      # Step 5: Set up Node.js for frontend
      - name: Set up Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 5: Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: ./fashion-front/fashion-store
        run: npm install

      # Step 6: Deploy backend
      - name: Deploy Backend
        working-directory: ./backend
        run: |
          nohup node server.js &  # Run the backend server in the background

      # Step 7: Deploy frontend
      - name: Deploy Frontend
        working-directory: ./fashion-front/fashion-store
        run: |
          nohup npm start &  # Run the frontend server in the background

      # Optional: Step 8 - Notify that the app is deployed
      - name: Notify Deployment
        run: echo "Backend and Frontend deployed successfully!"
